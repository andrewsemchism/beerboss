# For development: docker compose --profile dev up --build
# For production: docker compose --profile prod up --build
version: "3"
services:
  # Prod specific services
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL:-http://localhost:3001}
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - backend
    profiles:
      - prod

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    restart: always
    environment:
      - DB_HOST=${DB_HOST:-backend-db}
      - DB_USER=${DB_USER:-user}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_DATABASE=${DB_DATABASE:-sample_data}
      - NODE_ENV=${NODE_ENV:-development}
    profiles:
      - prod

  # Dev specific services
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL:-http://localhost:3001}
      - CHOKIDAR_USEPOLLING=true # For hot reloading
      - WATCHPACK_POLLING=true #  For hot reloading
      - WDS_SOCKET_HOST=127.0.0.1 # For hot reloading
    ports:
      - "3000:3000"
    depends_on:
      - backend-dev
    volumes:
      - "./frontend:/app"
      - "/app/node_modules"
    profiles:
      - dev

  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    environment:
      - DB_HOST=${DB_HOST:-backend-db}
      - DB_USER=${DB_USER:-user}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_DATABASE=${DB_DATABASE:-sample_data}
    depends_on:
      - backend-db
    profiles:
      - dev

  backend-db:
    image: mysql:8.0
    ports:
      # Use port 9906 to avoid conflicts with a locally installed MySQL.
      - "9906:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE:-sample_data}
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-password}
    volumes:
      - ./sample_data.sql:/docker-entrypoint-initdb.d/sample_data.sql
    profiles:
      - dev
